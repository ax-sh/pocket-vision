import { pb } from './db.ts';

async function createBaseCollection() {
  // // create base collection
  // const base = await pb.collections.create({
  //   name: 'exampleBase',
  //   type: 'base',
  //   fields: [
  //     {
  //       name: 'title',
  //       type: 'text',
  //       required: true,
  //       min: 10,
  //     },
  //     {
  //       name: 'status',
  //       type: 'bool',
  //     },
  //   ],
  // });
  // create view collection
  const view = await pb.collections.create({
    name: 'exampleView',
    type: 'view',
    listRule: '@request.auth.id != ""',
    viewRule: null,
    // the schema will be autogenerated from the below query
    viewQuery: 'SELECT id, name from posts',
  });
  console.log(view);
}

export async function getUsers() {
  await createBaseCollection();
  const records = await pb.collection('users').getFullList({
    sort: '-created',
  });
  return records;
}

// fetch a paginated records list
// const users =  pb.collection('users')
// const resultList =await users.getList()
// fetch a paginated records list
// const resultList = await pb.collection('users').getList(1, 50, {
//   filter: 'created >= "2022-01-01 00:00:00" && someField1 != someField2',
// });

// // or fetch only the first record that matches the specified filter
//   const record = await pb.collection('users').getFirstListItem('someField="test"', {
//     expand: 'relField1,relField2.subRelField',
//   });

// console.log(records,record, 'dd');
